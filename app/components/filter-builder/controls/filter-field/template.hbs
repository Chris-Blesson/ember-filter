<section filter-builder-condition={{@condition}} class={{(concat "fields-builder-" @inputType)}}>
  <UiComponents::Dropdown
    @optionIdPath = {{this.optionIdPath}}
    @optionLabelPath = {{this.optionLabelPath}}
    @value={{this.selectedOption}}
    @options={{@operations}}
    @onChange={{this.updateCurrentOperation}}
  />

  {{#if (and (not this.hasMultiLevelCategory) this.hasDefaultLevelTwo)}}
    <div class="fields-builder-second-level">
      <FilterBuilder::Controls::SecondLevelRenderer as |secondLevelRenderer|>
        {{#if (eq this.levelTwoCategory 'one-way')}}
          <secondLevelRenderer.oneWay>
            {{component @filterFormComponent updateHandler=this.updateFields}}
          </secondLevelRenderer.oneWay>
        {{else}}
          <secondLevelRenderer.twoWay
            @type = {{this.type}}
            @showIcon = {{this.showIcon}}
          as |twoWay|>
            <twoWay.firstSection>
              {{component @filterFormComponent updateHandler=this.updateFields name="from"}}
            </twoWay.firstSection>
            <twoWay.secondSection>
              {{component @filterFormComponent updateHandler=this.updateFields  name="to"}}
            </twoWay.secondSection>
          </secondLevelRenderer.twoWay>
        {{/if}}
      </FilterBuilder::Controls::SecondLevelRenderer>
    </div>
  {{else}}
    {{#if this.isValidOperation}}
      <FilterBuilder::Controls::MultiLevelRenderer @showIcon = {{this.showIcon}} as |MultiLevel|>
        <MultiLevel.firstLevel>
          {{component @multiLevelFirstSection}}
        </MultiLevel.firstLevel>
        <MultiLevel.secondLevel>
          {{component @multiLevelSecondSection}}
        </MultiLevel.secondLevel>
      </FilterBuilder::Controls::MultiLevelRenderer>
    {{/if}}
  {{/if}}
</section>